[metadata]
org = "example.com"
maintainer = "k8s-admin (me@example.com)"
description = "example Desired State File for demo purposes."
[certificates]

[settings]

# Helmsman will try connect to this context first, if it does not exist, it will be created using the credentials provided further below
kubeContext = "gke_praqma-education_europe-west1-b_acme-workshop" 

# Find your current-context using:
# [kamran@kworkhorse ~]$ kubectl config current-context
# gke_praqma-education_europe-west1-b_acme-workshop
# [kamran@kworkhorse ~]$ 

serviceAccount = "tiller" # k8s serviceaccount for helm's tiller - must be already defined; validation error will be thrown otherwise.

# helm has option of using "secret" or "configmap" as a method of storaging it's state. 
# You don't need to actually create any "secret" per se.
# The default backend is "configMap".
storageBackend = "secret"

[namespaces]
  [namespaces.production]
   protected = true
  [namespaces.development]
   protected = false
  [namespaces.kube-system]
   protected = true
   # Kube-system normally has tiller installed - almost always. So no need to do this here.
   installTiller = false
   tillerServiceAccount = "tiller" 

[helmRepos]
stable = "https://kubernetes-charts.storage.googleapis.com"
# More bleeding edge repo:
# incubator = "http://storage.googleapis.com/kubernetes-charts-incubator"

[apps]
    [apps.mysql]
    name = "mysql" # should be unique across all apps
    description = "mysql"
    namespace = "production" # maps to the namespace as defined in namespaces above
    enabled = true # change to false if you want to delete this app release [empty = false]
    chart = "stable/mysql" # changing the chart name means delete and recreate this chart
    version = "0.3.6" # chart version
    valuesFile = "applications/development/mysql-development-values.yaml" # leaving it empty uses the default chart values
    purge = false # will only be considered when there is a delete operation
    test = false # run the tests when this release is installed for the first time only
    protected = false
    priority= -3
    wait = true

    [apps.artifactory]
    name = "artifactory" # should be unique across all apps
    description = "artifactory"
    namespace = "production" # maps to the namespace as defined in namespaces above
    enabled = false # change to false if you want to delete this app release [empty = flase]
    chart = "stable/artifactory" # changing the chart name means delete and recreate this chart
    version = "7.0.6" # chart version
    valuesFile = "" # leaving it empty uses the default chart values
    purge = false # will only be considered when there is a delete operation
    test = false # run the tests when this release is installed for the first time only
    priority= -2
